service: shrouded
provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  timeout: 30 # optional, in seconds, default is 6
  stage: ${opt:stage, "dev"}
  region: ${opt:region, "ap-southeast-1"}
  environment:
    TABLE_NAME: shrouded
  tracing:
    lambda: true
functions:
  createIdentityGroup:
    handler: src/functionHandlers/createIdentityGroup/index.handler
    events:
      - http:
          path: /identityGroup
          method: post
          cors: true
  listIdentityGroups:
    handler: src/functionHandlers/listIdentityGroups/index.handler
    events:
      - http:
          path: /identityGroup
          method: get
          cors: true
  createIdentityCommitment:
    handler: src/functionHandlers/createIdentityCommitment/index.handler
    events:
      - http:
          path: /identityCommitment
          method: post
          cors: true
  listIdentityCommitmentsByIdentityGroup:
    handler: src/functionHandlers/listIdentityCommitmentsByIdentityGroup/index.handler
    events:
      - http:
          path: /identityCommitment/{identityGroup}
          method: get
          cors: true
  createClaim:
    handler: src/functionHandlers/createClaim/index.handler
    events:
      - http:
          path: /claim
          method: post
          cors: true
  listClaimsExternalNullifier:
    handler: src/functionHandlers/listClaims/index.handler
    events:
      - http:
          path: /claim/{identityGroup}/{externalNullifier}
          method: get
          cors: true
  listClaims:
    handler: src/functionHandlers/listClaims/index.handler
    events:
      - http:
          path: /claim/{identityGroup}
          method: get
          cors: true
resources:
  Resources:
    ShroudedTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: inverted
            KeySchema:
              - AttributeName: SK
                KeyType: HASH
              - AttributeName: PK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.TABLE_NAME}
custom:
  webpack:
    includeModules: true
  # Enable auto migration in local dynamodb on start
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
    stages:
      - dev

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-dynamodb-local
